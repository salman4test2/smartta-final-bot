model: gpt-4o-mini
temperature: 0.2

# NLP configuration for intent parsing and synonyms
nlp:
  synonyms:
    add: ["add","include","insert","attach","create","put","append","make","give","provide"]
    button: ["button","buttons","cta","quick reply","quick replies","reply option","action","actions"]
    url: ["url","link","website","web","open","visit"]
    phone: ["phone","call","contact","dial","ring"]
    brand: ["brand","company","org","organization","business","sender","brand name","company name"]
    header: ["header","title","heading"]
    footer: ["footer","sign-off","signature"]
    shorten: ["shorten","shorter","make it short","condense","trim","crisper","concise","brief","reduce"]
    name: ["name","title","template name"]
    body: ["body","message","text","content","copy"]
  languages: ["en","hi","es"]

history:
  max_turns: 200
  log_llm_io: true  # your code logs regardless; this is just a hint

limits:
  buttons:
    max_total: 10      # overall hard cap
    max_visible: 3     # on-card; rest under "See all"
    max_url: 2
    max_phone: 1

creation_payload_schema:
  $schema: "http://json-schema.org/draft-07/schema#"
  type: object
  required: [name, language, category, components]
  properties:
    name: { type: string, pattern: "^[a-z0-9_]{1,64}$" }
    language: { type: string }  # e.g., en_US, hi_IN
    category: { type: string, enum: [MARKETING, UTILITY, AUTHENTICATION] }
    components:
      type: array
      minItems: 1
      items:
        type: object
        required: [type]
        properties:
          type: { type: string, enum: [HEADER, BODY, FOOTER, BUTTONS] }
          format: { type: string, enum: [TEXT, IMAGE, VIDEO, DOCUMENT, LOCATION] }
          text: { type: string }
          example: { type: [object, array, string, 'null'] }
          buttons:
            type: array
            items:
              type: object
              required: [type, text]
              properties:
                type: { type: string, enum: [QUICK_REPLY, URL, PHONE_NUMBER] }
                text: { type: string }
                url: { type: string }
                phone_number: { type: string }
                payload: { type: string }
  additionalProperties: false
  allOf:
    # Header format conditionals: TEXT requires text, media forbids text
    - if:
        properties:
          components:
            contains:
              allOf:
                - properties: { type: { const: HEADER } }
                - properties: { format: { const: TEXT } }
      then:
        properties:
          components:
            contains:
              allOf:
                - properties: { type: { const: HEADER } }
                - properties: { format: { const: TEXT } }
                - required: [text]
    # Non-TEXT headers must not have text field
    - if:
        properties:
          components:
            contains:
              allOf:
                - properties: { type: { const: HEADER } }
                - properties: { format: { enum: [IMAGE, VIDEO, DOCUMENT, LOCATION] } }
      then:
        properties:
          components:
            contains:
              allOf:
                - properties: { type: { const: HEADER } }
                - properties: { format: { enum: [IMAGE, VIDEO, DOCUMENT, LOCATION] } }
                - not: { required: [text] }
    # AUTHENTICATION category restrictions
    - if:
        properties: { category: { const: AUTHENTICATION } }
      then:
        properties:
          components:
            allOf:
              # No FOOTER allowed
              - not:
                  contains: { properties: { type: { const: FOOTER } } }
              # No BUTTONS allowed  
              - not:
                  contains: { properties: { type: { const: BUTTONS } } }
              # Only TEXT headers allowed (if header present)
              - not:
                  contains:
                    allOf:
                      - properties: { type: { const: HEADER } }
                      - properties: { format: { enum: [IMAGE, VIDEO, DOCUMENT, LOCATION] } }

lint_rules:
  # Lengths (Meta norms)
  body_max_chars: 1024
  header_text_max_chars: 60
  footer_max_chars: 60

  # Placeholder hygiene
  placeholders:
    enforce_sequential: true      # {{1}}, {{2}}, ...
    forbid_adjacent: true         # no "{{1}}{{2}}"
    forbid_edge_positions: true   # not at very start or end of BODY

  # Button constraints (mirrors limits.buttons)
  buttons:
    max_total: 10
    max_url: 2
    max_phone: 1

  # Language and naming constraints
  languages:
    whitelist: [en_US, hi_IN, es_MX, fr_FR, de_DE]
  naming:
    reserved_prefixes: [test_, tmp_, demo_]

  # Category-specific constraints
  category_constraints:
    AUTHENTICATION:
      allow_buttons: false
      allow_footer: false  # AUTH templates should not have footers
      allow_media_header: false
      allowed_header_formats: [TEXT]  # Only TEXT headers allowed for AUTH
    MARKETING:
      allow_buttons: true
      allow_footer: true
      allowed_header_formats: [TEXT, IMAGE, VIDEO, DOCUMENT, LOCATION]
    UTILITY:
      allow_buttons: true
      allow_footer: true
      allowed_header_formats: [TEXT, IMAGE, VIDEO, DOCUMENT, LOCATION]

  # Header format validation
  header_formats:
    TEXT:
      max_length: 60
      max_variables: 1
      require_text: true
    IMAGE:
      require_example: true
      forbid_text: true
    VIDEO:
      require_example: true
      forbid_text: true
    DOCUMENT:
      require_example: true
      forbid_text: true
    LOCATION:
      require_example: false  # Optional for LOCATION
      forbid_text: true

  # Components configuration (future-proof header config block)
  components:
    buttons:
      defaults_by_category:
        MARKETING: ["Shop now", "Learn more", "Contact us"]
        UTILITY: ["View details", "Update info", "Get help"]
        AUTHENTICATION: []  # buttons not allowed anyway
    text:
      shorten:
        enabled: true
        target_length: 140
    header:
      formats:
        TEXT:
          max_length: 60
          max_variables: 1
          require_text: true
          variable_example_required: true
        IMAGE:
          require_example: true
          forbid_text: true
          allowed_mime_types: ["image/jpeg", "image/png"]
        VIDEO:
          require_example: true
          forbid_text: true
          allowed_mime_types: ["video/mp4", "video/3gpp"]
        DOCUMENT:
          require_example: true
          forbid_text: true
          allowed_mime_types: ["application/pdf", "text/plain"]
        LOCATION:
          require_example: false
          forbid_text: true
          master_switch: true  # LOCATION is master format
      category_restrictions:
        AUTHENTICATION:
          allowed_formats: ["TEXT"]
        MARKETING:
          allowed_formats: ["TEXT", "IMAGE", "VIDEO", "DOCUMENT", "LOCATION"]
        UTILITY:
          allowed_formats: ["TEXT", "IMAGE", "VIDEO", "DOCUMENT", "LOCATION"]

  # Disallowed links (safety/compliance)
  forbidden_links:
    - "^https?://wa\\.me/"
    - "^javascript:"
    - "^https?://bit\\.ly/"
    - "^data:"

naming_policy:
  auto_snake_case: true
  max_len: 64
  reserved_prefixes: []
